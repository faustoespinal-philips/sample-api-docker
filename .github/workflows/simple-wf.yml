# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'
      - run: go version

      # Runs a single command using the runners shell
      - name: Sample API docker build script
        run: echo "Starting build...."

      # Runs a set of commands using the runners shell
      - name: Setup additional needed tools
        run: |
          docker pull openapitools/openapi-generator-cli
          docker run openapitools/openapi-generator-cli list          
          echo "----------------------"
          pwd
          ls -ls
          echo "----------------------"
          go version
          mkdir -p ./src
          export GO_POST_PROCESS_FILE="/usr/local/bin/gofmt -w"
          docker run --rm -v "${PWD}:/local" openapitools/openapi-generator-cli generate -i /local/api.yaml -g go-gin-server -o /local/src
          sudo cp ./main.go ./src/
          cd ./src
          echo "----------------------"
          pwd
          ls -ls
          echo "----------------------"
          export CGO_ENABLED=0
          go mod init philips/us/sample-api-docker
          go mod tidy
          go get -d -v ./...
          go build -a -installsuffix cgo -o sample-api-docker .
          ls -ls
          echo test, and deploy your project.
